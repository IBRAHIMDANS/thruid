name: Auto Create pull request

on:
  push:
    branches:
      - dev

jobs:
  create-merge-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Config GitHub CLI
        run: |
          echo "${{ secrets.PERSONAL_ACCESS_TOKEN }}" | gh auth login --with-token
          git config --global user.email "boot@github.com"
          git config --global user.name "git bot mr ðŸ¤–"

      - name: Check if new commit commits
        id: check-commits
        run: |
          COMMITS=$(git log origin/main..origin/dev --oneline)
          if [[ -z "$COMMITS" ]]; then
            echo "No new commits to merge."
            echo "::set-output name=has_changes::false"
            exit 0
          else
            echo "::set-output name=has_changes::true"
          fi

      - name: Check for draft or WIP commits and existing PR
        id: check-draft-wip-and-pr
        run: |
          LAST_COMMIT_TITLE=$(git log -1 --pretty=format:%s)
          EXISTING_PR=$(gh pr list --base main --head dev --state open --limit 1)
          if [[ "$LAST_COMMIT_TITLE" == draft:* ]] || [[ "$LAST_COMMIT_TITLE" == wip:* ]] || [[ -n "$EXISTING_PR" ]]; then
            echo "Draft/WIP commit found or PR already exists. Skipping PR creation."
            echo "::set-output name=create_pr::false"
          else
            echo "::set-output name=create_pr::true"
          fi

      - name: Create MR
        if: steps.check-commits.outputs.has_changes == 'true' && steps.check-draft-wip-and-pr.outputs.create_pr == 'true'
        run: |
          PR_TITLE=$(git log -1 --pretty=format:%s)
          PR_BODY=$(git log -1 --pretty=format:%b)
          PR_TITLE=${PR_TITLE:-"Chore: rebase dev onto main"}
          PR_BODY=${PR_BODY:-"This is an automated PR to rebase dev onto main."}
          gh pr create --title "$PR_TITLE" --body "$PR_BODY" --reviewer ibrahimdans --base main --head dev
env:
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
